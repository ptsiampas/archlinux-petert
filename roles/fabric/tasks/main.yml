---
- name: Check the OS distribution and install pipx
  block:
    - name: Gather facts about the target system
      setup:

    - name: Install System versions of python, pip, pipx and pexpect on Arch Linux
      pacman:
        name:
          - python
          - python-pip
          - python-pipx
          - python-pexpect
        state: present
      become: true
      when: ansible_os_family == 'Archlinux'

    - name: Install Python and pip on Debian-based systems
      apt:
        name:
          - python3
          - python3-pip
          - python3-pipx
          - python3-pexpect
        state: present
      become: true
      when: ansible_os_family == 'Debian'

- name: "Ensure the directory exists for home/petert/github"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/github"
    state: directory
    mode: '0755'

- name: "Clone Fabric repository"
  ansible.builtin.git:
    repo: 'https://github.com/danielmiessler/fabric.git'
    dest: "{{ ansible_user_dir }}/github/fabric"
    clone: yes
    update: yes

- name: "Install Fabric using pipx"
  ansible.builtin.command:
    cmd: "pipx install ."
  args:
    chdir: "{{ ansible_user_dir }}/github/fabric"

- name: "Ensure the directory exists for home/petert/.config/fabric"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/fabric"
    state: directory
    mode: '0755'

- name: "Decrypt values for.env file to the configuration directory"
  copy:
    dest: "{{ ansible_user_dir }}/.config/fabric/.env"
    content: "{{ fabric_config }}"
    owner: petert
    group: petert
    mode: "0644"
  no_log: true

- name: "Run Setup for fabric"
  ansible.builtin.expect:
    command: "fabric --setup"
    responses:
      (?i)Please enter your OpenAI API key.*: "\n"
      (?i)Please enter your claude API key.*: "\n"
      (?i)Please enter your YouTube API key.*: "\n"
    timeout: 30
